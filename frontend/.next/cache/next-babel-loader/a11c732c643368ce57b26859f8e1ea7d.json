{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/devnguyen/Programming/OSU/cs340/hawkins-library/components/Table.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useReducer } from 'react';\n\nvar NoteApp = function NoteApp() {\n  var notesReducer = function notesReducer(state, action) {\n    switch (action.type) {\n      case 'POPULATE_NOTES':\n        return action.notes;\n\n      case 'ADD_NOTE':\n        return [].concat(_toConsumableArray(state), [{\n          title: action.title,\n          body: action.body\n        }]);\n\n      case 'REMOVE_NOTE':\n        return state.filter(function (note) {\n          return note.title !== action.title;\n        });\n\n      default:\n        return state;\n    }\n  };\n\n  var _useReducer = useReducer(notesReducer, []),\n      notes = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var _useState = useState(''),\n      title = _useState[0],\n      setTitle = _useState[1];\n\n  var _useState2 = useState(''),\n      body = _useState2[0],\n      setBody = _useState2[1];\n\n  var addNote = function addNote(e) {\n    e.preventDefault();\n    dispatch({\n      type: 'ADD_NOTE',\n      title: title,\n      body: body\n    });\n    setTitle('');\n    setBody('');\n  };\n\n  var removeNote = function removeNote(title) {\n    dispatch({\n      type: 'REMOVE_NOTE',\n      title: title\n    });\n  };\n\n  useEffect(function () {\n    var notes = JSON.parse(localStorage.getItem('notes'));\n\n    if (notes) {\n      dispatch({\n        type: 'POPULATE_NOTES',\n        notes: notes\n      });\n    }\n  }, []);\n  useEffect(function () {\n    localStorage.setItem('notes', _JSON$stringify(notes));\n  }, [notes]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Notes\"), notes.map(function (note) {\n    return __jsx(Note, {\n      key: note.title,\n      note: note,\n      removeNote: removeNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    });\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Add note\"), __jsx(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Title\"), __jsx(\"input\", {\n    value: title,\n    onChange: function onChange(e) {\n      setTitle(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Body\"), __jsx(\"input\", {\n    value: body,\n    onChange: function onChange(e) {\n      setBody(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"add note\")));\n};\n\nvar Note = function Note(_ref) {\n  var note = _ref.note,\n      removeNote = _ref.removeNote;\n  useEffect(function () {\n    console.log('setting up effect running on notsdfe');\n    return function () {\n      console.log('cleaning up use EFFECT');\n    };\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, note.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, note.body), __jsx(\"button\", {\n    onClick: function onClick() {\n      return removeNote(note.title);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"x\"));\n}; //   const [count, setCount] = useState(0)\n//   const [text, setText] = useState('')\n//   useEffect(() => {\n//     console.log('this should only run once');\n//   }, [])\n//   useEffect(() => {\n//     console.log('use effect ran');\n//     document.title = count\n//   }, [count])\n//   return (\n//     <div>\n//       <p>The {text || 'count'} is {count}</p>\n//       <button onClick={() => setCount(count - 1)}>-1</button>\n//       <button onClick={() => setCount(0)}>reset</button>\n//       <button onClick={() => setCount(count + 1)}>+1</button>\n//       <input\n//         value={text}\n//         onChange={(e) => setText(e.target.value)}\n//       />\n//     </div>\n//   )\n// }\n\n\nexport default NoteApp;","map":{"version":3,"sources":["/Users/devnguyen/Programming/OSU/cs340/hawkins-library/components/Table.js"],"names":["useState","useEffect","useReducer","NoteApp","notesReducer","state","action","type","notes","title","body","filter","note","dispatch","setTitle","setBody","addNote","e","preventDefault","removeNote","JSON","parse","localStorage","getItem","setItem","map","target","value","Note","console","log"],"mappings":"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","sourcesContent":["import { useState, useEffect, useReducer } from 'react'\n\n\nconst NoteApp = () => {\n  const notesReducer = (state, action) => {\n    switch (action.type) {\n      case 'POPULATE_NOTES':\n        return action.notes\n      case 'ADD_NOTE':\n        return [\n          ...state,\n          { title: action.title, body: action.body }\n        ]\n      case 'REMOVE_NOTE':\n        return state.filter((note) => note.title !== action.title )\n      default:\n        return state\n    }\n  }\n\n  const [notes, dispatch] = useReducer(notesReducer, [])\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n\n  const addNote = (e) => {\n    e.preventDefault()\n    dispatch({\n      type: 'ADD_NOTE',\n      title,\n      body\n    })\n    setTitle('')\n    setBody('')\n  }\n\n  const removeNote = (title) => {\n    dispatch({\n      type: 'REMOVE_NOTE',\n      title\n    })\n  }\n\n  useEffect(() => {\n    const notes = JSON.parse(localStorage.getItem('notes'))\n\n    if (notes) {\n      dispatch({ type: 'POPULATE_NOTES', notes })\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes))\n  }, [notes])\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      {/* Render state to page */}\n      {notes.map((note) => (\n        <Note key={note.title} note={note} removeNote={removeNote} />\n      ))}\n\n      <p>Add note</p>\n      <form onSubmit={addNote}>\n\n        <label>Title</label>\n        <input \n          value={title} \n          onChange={(e) => {setTitle(e.target.value)}} \n        />\n\n        <label>Body</label>\n        <input \n          value={body} \n          onChange={(e) => {setBody(e.target.value)}} \n        />\n\n        <button>add note</button>\n\n      </form>\n\n    </div>\n  )\n}\n\nconst Note = ({ note, removeNote }) => {\n  useEffect(() => {\n    console.log('setting up effect running on notsdfe');\n    \n    return () => {\n      console.log('cleaning up use EFFECT');\n    }\n  }, [])\n\n\n  return (\n    <div>\n      <h3>{note.title}</h3>\n      <p>{note.body}</p>\n      <button onClick={() => removeNote(note.title)}>x</button>\n    </div>\n  )\n}\n\n//   const [count, setCount] = useState(0)\n//   const [text, setText] = useState('')\n\n//   useEffect(() => {\n//     console.log('this should only run once');\n//   }, [])\n\n//   useEffect(() => {\n//     console.log('use effect ran');\n//     document.title = count\n    \n//   }, [count])\n\n//   return (\n//     <div>\n//       <p>The {text || 'count'} is {count}</p>\n//       <button onClick={() => setCount(count - 1)}>-1</button>\n//       <button onClick={() => setCount(0)}>reset</button>\n//       <button onClick={() => setCount(count + 1)}>+1</button>\n//       <input\n//         value={text}\n//         onChange={(e) => setText(e.target.value)}\n//       />\n//     </div>\n//   )\n// }\n\nexport default NoteApp"]},"metadata":{},"sourceType":"module"}