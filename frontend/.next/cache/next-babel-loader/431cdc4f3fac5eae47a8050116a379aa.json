{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/Users/devnguyen/Programming/OSU/cs340/hawkins-library/components/Table.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\n\nvar NoteApp = function NoteApp() {\n  var _useState = useState([]),\n      notes = _useState[0],\n      setNotes = _useState[1];\n\n  var _useState2 = useState(''),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(''),\n      body = _useState3[0],\n      setBody = _useState3[1];\n\n  var addNote = function addNote(e) {\n    e.preventDefault();\n    setNotes([].concat(_toConsumableArray(notes), [{\n      title: title,\n      body: body\n    }]));\n    setTitle('');\n    setBody('');\n  };\n\n  var handleDeleteNote = function handleDeleteNote(title) {\n    setNotes(notes.filter(function (note) {\n      return note.title !== title;\n    }));\n  };\n\n  useEffect(function () {\n    var notesData = JSON.parse(localStorage.getItem('notes'));\n\n    if (notesData) {\n      setNotes(notesData);\n    }\n  }, []);\n  useEffect(function () {\n    localStorage.setItem('notes', _JSON$stringify(notes));\n  }, [notes]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Notes\"), notes.map(function (note) {\n    return __jsx(\"div\", {\n      key: note.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, note.title), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, note.body), __jsx(\"button\", {\n      onClick: function onClick() {\n        return handleDeleteNote(note.title);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"x\"));\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Add note\"), __jsx(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Title\"), __jsx(\"input\", {\n    value: title,\n    onChange: function onChange(e) {\n      setTitle(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Body\"), __jsx(\"input\", {\n    value: body,\n    onChange: function onChange(e) {\n      setBody(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"add note\")));\n}; //   const [count, setCount] = useState(0)\n//   const [text, setText] = useState('')\n//   useEffect(() => {\n//     console.log('this should only run once');\n//   }, [])\n//   useEffect(() => {\n//     console.log('use effect ran');\n//     document.title = count\n//   }, [count])\n//   return (\n//     <div>\n//       <p>The {text || 'count'} is {count}</p>\n//       <button onClick={() => setCount(count - 1)}>-1</button>\n//       <button onClick={() => setCount(0)}>reset</button>\n//       <button onClick={() => setCount(count + 1)}>+1</button>\n//       <input\n//         value={text}\n//         onChange={(e) => setText(e.target.value)}\n//       />\n//     </div>\n//   )\n// }\n\n\nexport default NoteApp;","map":{"version":3,"sources":["/Users/devnguyen/Programming/OSU/cs340/hawkins-library/components/Table.js"],"names":["useState","useEffect","NoteApp","notes","setNotes","title","setTitle","body","setBody","addNote","e","preventDefault","handleDeleteNote","filter","note","notesData","JSON","parse","localStorage","getItem","setItem","map","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\n\nconst NoteApp = () => {\n  const [notes, setNotes] = useState([])\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n\n  const addNote = (e) => {\n    e.preventDefault()\n    setNotes([\n      ...notes,\n      {\n        title,\n        body\n      }\n    ])\n    setTitle('')\n    setBody('')\n  }\n\n  const handleDeleteNote = (title) => {\n    setNotes(notes.filter((note) => note.title !== title))\n  }\n\n  useEffect(() => {\n    const notesData = JSON.parse(localStorage.getItem('notes'))\n    \n    if (notesData) {\n      setNotes(notesData)\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes))\n  }, [notes])\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      {/* Render state to page */}\n      {notes.map((note) => (\n        <div key={note.title}>\n          <h3>{note.title}</h3>\n          <p>{note.body}</p>\n          <button onClick={() => handleDeleteNote(note.title)}>x</button>\n        </div>\n      ))}\n\n      <p>Add note</p>\n      <form onSubmit={addNote}>\n\n        <label>Title</label>\n        <input \n          value={title} \n          onChange={(e) => {setTitle(e.target.value)}} \n        />\n\n        <label>Body</label>\n        <input \n          value={body} \n          onChange={(e) => {setBody(e.target.value)}} \n        />\n\n        <button>add note</button>\n\n      </form>\n\n    </div>\n  )\n}\n\n//   const [count, setCount] = useState(0)\n//   const [text, setText] = useState('')\n\n//   useEffect(() => {\n//     console.log('this should only run once');\n//   }, [])\n\n//   useEffect(() => {\n//     console.log('use effect ran');\n//     document.title = count\n    \n//   }, [count])\n\n//   return (\n//     <div>\n//       <p>The {text || 'count'} is {count}</p>\n//       <button onClick={() => setCount(count - 1)}>-1</button>\n//       <button onClick={() => setCount(0)}>reset</button>\n//       <button onClick={() => setCount(count + 1)}>+1</button>\n//       <input\n//         value={text}\n//         onChange={(e) => setText(e.target.value)}\n//       />\n//     </div>\n//   )\n// }\n\nexport default NoteApp"]},"metadata":{},"sourceType":"module"}