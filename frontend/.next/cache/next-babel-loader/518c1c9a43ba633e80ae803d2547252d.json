{"ast":null,"code":"var _jsxFileName = \"/Users/devnguyen/Programming/OSU/cs340/hawkins-library/components/nav/NavBar.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport NavItem from './NavItem';\nimport styled from 'styled-components';\nimport AdminNav from './AdminNav';\nconst StyledNavLogo = styled.div`\n  margin: 0 1em;\n  text-transform: uppercase;\n  line-height: 8rem;\n  padding: 0 .94rem;\n  height: 7rem;\n  a {\n    font-family: 'Raleway', sans-serif;\n    font-size: 3.2rem;\n  }\n`;\n\nconst NavLogo = () => __jsx(StyledNavLogo, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"HAWKINS\")));\n\nconst StyledNavBar = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${props => props.theme.white};\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  z-index: 1;\n  margin: 0;\n  width: 100%;\n  /* height: 7rem; */\n  /* padding: 0 5%; */\n  box-shadow: 0px 4px 6px -1px rgba(0,0,0,0.1);\n  transition: 250ms;\n\n  ul {\n    text-decoration: none;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    font-size: 1.3rem;\n  }\n\n`;\nconst StyledNavContainer = styled.div`\n  .default-nav {\n    background: transparent;\n    box-shadow: inset 0 4rem 40px rgba(0,0,0,0.22);\n    a {\n      color: ${props => props.theme.white};\n      :hover {\n        color: ${props => props.theme.red};\n      }\n    }\n  }\n`;\n\nconst NavBar = () => {\n  const {\n    0: isTop,\n    1: setIsTop\n  } = useState(true);\n  const {\n    0: isHoverAdmin,\n    1: setIsHoverAdmin\n  } = useState(false); // useEffect(() => {\n  // }, [isTop, isHoverAdmin])\n\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > 2) {\n      setIsTop(false);\n    } else {\n      setIsTop(true);\n    }\n  });\n\n  const handleMouseEnter = () => {\n    setIsHoverAdmin(true);\n    console.log('hoveringggg', isHoverAdmin);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHoverAdmin(false);\n    console.log('leaving', isHoverAdmin);\n  };\n\n  return __jsx(StyledNavContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(StyledNavBar, {\n    className: isTop ? 'default-nav' : '',\n    id: \"nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(NavLogo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(NavItem, {\n    route: \"/library\",\n    pageName: \"Library\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), __jsx(NavItem, {\n    route: \"/events\",\n    pageName: \"Events\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), __jsx(NavItem, {\n    route: \"/return-books\",\n    pageName: \"Return Books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), __jsx(NavItem, {\n    route: \"/join\",\n    pageName: \"Sign Up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(NavItem, {\n    route: \"/\",\n    pageName: \"Admin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), __jsx(AdminNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/devnguyen/Programming/OSU/cs340/hawkins-library/components/nav/NavBar.js"],"names":["useState","useEffect","Link","NavItem","styled","AdminNav","StyledNavLogo","div","NavLogo","StyledNavBar","nav","props","theme","white","StyledNavContainer","red","NavBar","isTop","setIsTop","isHoverAdmin","setIsHoverAdmin","window","addEventListener","scrollY","handleMouseEnter","console","log","handleMouseLeave"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport Link from 'next/link'\nimport NavItem from './NavItem'\nimport styled from 'styled-components'\nimport AdminNav from './AdminNav'\n\n\n\nconst StyledNavLogo = styled.div`\n  margin: 0 1em;\n  text-transform: uppercase;\n  line-height: 8rem;\n  padding: 0 .94rem;\n  height: 7rem;\n  a {\n    font-family: 'Raleway', sans-serif;\n    font-size: 3.2rem;\n  }\n`\n\nconst NavLogo = () => (\n  <StyledNavLogo>\n    <Link href=\"/\">\n      <a>HAWKINS</a>\n    </Link>\n  </StyledNavLogo>\n)\n\nconst StyledNavBar = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${props => props.theme.white};\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  z-index: 1;\n  margin: 0;\n  width: 100%;\n  /* height: 7rem; */\n  /* padding: 0 5%; */\n  box-shadow: 0px 4px 6px -1px rgba(0,0,0,0.1);\n  transition: 250ms;\n\n  ul {\n    text-decoration: none;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    font-size: 1.3rem;\n  }\n\n`\n\nconst StyledNavContainer = styled.div`\n  .default-nav {\n    background: transparent;\n    box-shadow: inset 0 4rem 40px rgba(0,0,0,0.22);\n    a {\n      color: ${props => props.theme.white};\n      :hover {\n        color: ${props => props.theme.red};\n      }\n    }\n  }\n`\n\nconst NavBar = () => {\n  const [isTop, setIsTop] = useState(true)\n  const [isHoverAdmin, setIsHoverAdmin] = useState(false)\n\n  // useEffect(() => {\n    \n    \n  // }, [isTop, isHoverAdmin])\n\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > 2) {\n      setIsTop(false)\n    } else {\n      setIsTop(true)\n    }\n  })\n\n  const handleMouseEnter = () => {\n    setIsHoverAdmin(true)\n    console.log('hoveringggg', isHoverAdmin)\n    \n  }\n\n  const handleMouseLeave = () => {\n    setIsHoverAdmin(false)\n    console.log('leaving', isHoverAdmin)\n    \n  }\n  \n  return (\n    <StyledNavContainer>\n      <StyledNavBar className={isTop ? 'default-nav' : ''} id=\"nav\">\n        <NavLogo />\n        <ul>\n          <NavItem route=\"/library\" pageName=\"Library\" />\n          <NavItem route=\"/events\" pageName=\"Events\" />\n          <NavItem route=\"/return-books\" pageName=\"Return Books\" />\n          <NavItem route=\"/join\" pageName=\"Sign Up\" />\n          <NavItem route=\"/\" pageName=\"Admin\" />\n          {/* <li> \n            Adminnnnn\n          </li> */}\n          <AdminNav />\n          {/* {isHoverAdmin ? <AdminNav /> : ''} */}\n        </ul>\n      </StyledNavBar>\n    </StyledNavContainer>\n  )\n}\n\n\nexport default NavBar"]},"metadata":{},"sourceType":"module"}