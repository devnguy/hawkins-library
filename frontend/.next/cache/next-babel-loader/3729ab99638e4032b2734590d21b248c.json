{"ast":null,"code":"var _jsxFileName = \"/Users/devnguyen/Programming/OSU/cs340/hawkins-library/components/Table.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\n\nconst NoteApp = () => {\n  const {\n    0: notes,\n    1: setNotes\n  } = useState([]);\n  const {\n    0: title,\n    1: setTitle\n  } = useState('');\n  const {\n    0: body,\n    1: setBody\n  } = useState('');\n\n  const addNote = e => {\n    e.preventDefault();\n    setNotes([...notes, {\n      title,\n      body\n    }]);\n    setTitle('');\n    setBody('');\n  };\n\n  const handleDeleteNote = title => {\n    setNotes(notes.filter(note => note.title !== title));\n  };\n\n  useEffect(() => {\n    const notesData = JSON.parse(localStorage.getItem('notes'));\n\n    if (notesData) {\n      setNotes(notesData);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes));\n  }, [notes]);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Notes\"), notes.map(note => __jsx(\"div\", {\n    key: note.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, note.title), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, note.body), __jsx(\"button\", {\n    onClick: () => handleDeleteNote(note.title),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"x\"))), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Add note\"), __jsx(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Title\"), __jsx(\"input\", {\n    value: title,\n    onChange: e => {\n      setTitle(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Body\"), __jsx(\"input\", {\n    value: body,\n    onChange: e => {\n      setBody(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"add note\")));\n}; //   const [count, setCount] = useState(0)\n//   const [text, setText] = useState('')\n//   useEffect(() => {\n//     console.log('this should only run once');\n//   }, [])\n//   useEffect(() => {\n//     console.log('use effect ran');\n//     document.title = count\n//   }, [count])\n//   return (\n//     <div>\n//       <p>The {text || 'count'} is {count}</p>\n//       <button onClick={() => setCount(count - 1)}>-1</button>\n//       <button onClick={() => setCount(0)}>reset</button>\n//       <button onClick={() => setCount(count + 1)}>+1</button>\n//       <input\n//         value={text}\n//         onChange={(e) => setText(e.target.value)}\n//       />\n//     </div>\n//   )\n// }\n\n\nexport default NoteApp;","map":{"version":3,"sources":["/Users/devnguyen/Programming/OSU/cs340/hawkins-library/components/Table.js"],"names":["useState","useEffect","NoteApp","notes","setNotes","title","setTitle","body","setBody","addNote","e","preventDefault","handleDeleteNote","filter","note","notesData","JSON","parse","localStorage","getItem","setItem","stringify","map","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\n\n\nconst NoteApp = () => {\n  const [notes, setNotes] = useState([])\n  const [title, setTitle] = useState('')\n  const [body, setBody] = useState('')\n\n  const addNote = (e) => {\n    e.preventDefault()\n    setNotes([\n      ...notes,\n      {\n        title,\n        body\n      }\n    ])\n    setTitle('')\n    setBody('')\n  }\n\n  const handleDeleteNote = (title) => {\n    setNotes(notes.filter((note) => note.title !== title))\n  }\n\n  useEffect(() => {\n    const notesData = JSON.parse(localStorage.getItem('notes'))\n    \n    if (notesData) {\n      setNotes(notesData)\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('notes', JSON.stringify(notes))\n  }, [notes])\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      {/* Render state to page */}\n      {notes.map((note) => (\n        <div key={note.title}>\n          <h3>{note.title}</h3>\n          <p>{note.body}</p>\n          <button onClick={() => handleDeleteNote(note.title)}>x</button>\n        </div>\n      ))}\n\n      <p>Add note</p>\n      <form onSubmit={addNote}>\n\n        <label>Title</label>\n        <input \n          value={title} \n          onChange={(e) => {setTitle(e.target.value)}} \n        />\n\n        <label>Body</label>\n        <input \n          value={body} \n          onChange={(e) => {setBody(e.target.value)}} \n        />\n\n        <button>add note</button>\n\n      </form>\n\n    </div>\n  )\n}\n\n//   const [count, setCount] = useState(0)\n//   const [text, setText] = useState('')\n\n//   useEffect(() => {\n//     console.log('this should only run once');\n//   }, [])\n\n//   useEffect(() => {\n//     console.log('use effect ran');\n//     document.title = count\n    \n//   }, [count])\n\n//   return (\n//     <div>\n//       <p>The {text || 'count'} is {count}</p>\n//       <button onClick={() => setCount(count - 1)}>-1</button>\n//       <button onClick={() => setCount(0)}>reset</button>\n//       <button onClick={() => setCount(count + 1)}>+1</button>\n//       <input\n//         value={text}\n//         onChange={(e) => setText(e.target.value)}\n//       />\n//     </div>\n//   )\n// }\n\nexport default NoteApp"]},"metadata":{},"sourceType":"module"}